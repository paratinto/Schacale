' Gambas class file
 ' Gambas class file

moltable AS NEW Molecules
formula_correct AS Boolean
chemtable AS NEW Chemicals

PUBLIC SUB Form_Open()
  
  Global.initapp()
  PRINT Global.workdir
  moltable.drawMoleculesCV(CViewMolecules1)
  moltable.drawMoleculesCV(CViewMolecules2, TRUE)
  
END

FUNCTION scanFormula(expression AS String) AS String[]

  DIM edited_exp AS String
  DIM tokens AS String[]
  DIM i, j AS Integer
  DIM atomtable AS Object
  DIM iscorrect AS Boolean
  
  atomtable = global.atomtable
  iscorrect = TRUE

  FOR i = 1 TO Len(expression)
    IF IsUpper(Mid(expression, i + 1, 1)) OR ((IsDigit(Mid(expression, i + 1, 1))) AND NOT (IsDigit(Mid(expression, i, 1))))
      edited_exp = edited_exp & Mid(expression, i, 1) & ","
    ELSE 
      edited_exp = edited_exp & Mid(expression, i, 1) 
    ENDIF 
  NEXT 
  
  tokens = Split(edited_exp, ",")
  tokens.Add("!")
  
  'check if expression (formula) is correct
  IF IsDigit(tokens[0]) THEN 
    iscorrect = FALSE
  ELSE 
  
    FOR j = 0 TO tokens.Length - 2
      IF NOT IsDigit(tokens[j]) AND atomtable.getWeight(tokens[j]) = 0 THEN iscorrect = FALSE
    NEXT 
  ENDIF 
  
  IF iscorrect = TRUE THEN RETURN tokens

END

FUNCTION buildMolComponents(tokens AS String[]) AS String[]
  DIM mc_out AS NEW String[]
  DIM i AS Integer
  
  IF formula_correct THEN 
    FOR i = 0 TO tokens.Length - 2
      IF (NOT IsDigit(tokens[i])) AND NOT (IsDigit(tokens[i + 1])) THEN 
        mc_out.Add(tokens[i])
        mc_out.add("1")
      ELSE 
        IF NOT (IsDigit(tokens[i])) THEN 
          mc_out.add(tokens[i])
          mc_out.add(tokens[i + 1])
        ENDIF 
      ENDIF 
    NEXT 
  ENDIF 
  RETURN mc_out
  
END

PUBLIC SUB formula_LostFocus() 'calls functions to obtain the weight of current molecule
 
  DIM token_list AS String[]
  DIM i, j, k AS Integer
  DIM weight AS Float
  DIM atomtable AS Object
  
  atomtable = global.atomtable
  token_list = scanFormula(formula.Text)
  weight = 0
  
  FOR i = 0 TO token_list.Length - 2 
    IF token_list[i + 1] <> "!" AND IsDigit(token_list[i + 1]) THEN 
      weight = weight + CInt(token_list[i + 1]) * atomtable.getweight(token_list[i])
    ELSE 
      IF NOT IsDigit(token_list[i]) THEN weight = weight + atomtable.getweight(token_list[i])
    ENDIF
    
  NEXT
  
    mass.Value = weight
    formula_correct = TRUE
    PRINT "entered correct formula: ", formula_correct
    
  CATCH 
    mass.Value = 0
    formula_correct = FALSE
    Message.Warning("entered formula is wrong", "OK")
    PRINT "entered correct formula: ", formula_correct

END

PUBLIC SUB CViewMolecules1_Click()

  updateB.Enabled = TRUE
  deleteB.Enabled = TRUE
  
  substance.Text = moltable.getName(CViewMolecules1.Key)
  formula.Text = moltable.getFormula(CViewMolecules1.Key)
  mass.Value = moltable.getMass(CViewMolecules1.Key)
  group.Text = moltable.getGroup(CViewMolecules1.Key)

END

PUBLIC SUB deleteB_Click()

  moltable.deleteMolecule(CViewMolecules1.Key)
  CViewMolecules1.Clear
  moltable.drawMoleculesCV(CViewMolecules1)
  updateB.Enabled = FALSE
  deleteB.Enabled = FALSE

END


PUBLIC SUB createB_Click()

  DIM scanf, molcom AS NEW String[]
  DIM i AS Integer
  
  scanf = scanFormula(formula.Text)
  
  molcom = buildMolComponents(scanf)
  
  FOR i = 0 TO molcom.Length - 1
    PRINT molcom[i]
  NEXT 
  
  moltable.insertMolecule(substance.text, molcom, mass.Value, group.Text)
  CViewMolecules1.Clear
  moltable.drawMoleculesCV(CViewMolecules1)
  
END

PUBLIC SUB updateB_Click()

  moltable.deleteMolecule(CViewMolecules1.Key)
  createB_Click()
  CViewMolecules1.Clear
  moltable.drawMoleculesCV(CViewMolecules1)
  updateB.Enabled = FALSE
  deleteB.Enabled = FALSE

END

PUBLIC SUB CViewMolecules2_Click()
  
  DIM key AS String
  
  key = CViewMolecules2.Key
  stocksubstance.Text = CViewMolecules2[key][0]
  
END

PUBLIC SUB Form_Close()

  Global.closeapp()

END


PUBLIC SUB TabStrip2_Click()
  
  CViewMolecules2.Clear()
  moltable.drawMoleculesCV(CViewMolecules2, TRUE)
  CViewChemicals.Clear()
  chemtable.DrawChemicalsCV(CViewChemicals)

END

PUBLIC SUB createStockB_Click()
  'name AS String, substid AS String, quantity AS Float, unit AS String, supplier AS String, location AS String, delivery AS Date, expiry AS Date
  chemtable.insertChemical(name.Text, CViewMolecules2.Key, quantity.Value, unit.Text, supplier.Text, location.text, delivery.Value, expiry.Value)
  CViewChemicals.Clear()
  chemtable.DrawChemicalsCV(CViewChemicals)
END

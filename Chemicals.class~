' Gambas class file
FUNCTION getnewId(entries AS Result) AS Integer
 
  IF entries.Length <> 0 THEN 
    entries.MoveLast()
    RETURN entries!id + 1
  ELSE 
    RETURN 0
  ENDIF 
  
END

PUBLIC SUB insertChemical(name AS String, substid AS String, quantity AS Float, unit AS String, supplier AS String, location AS String, delivery AS Date, expiry AS Date)

      DIM newitem AS Result
      DIM id AS Integer
      
      id = getnewId(Global.dbcon.Find("chemicals"))
      
      IF name <> "" AND quantity > 0 THEN 
        Global.dbcon.Begin()
        newitem = Global.dbcon.Create("chemicals")
        newitem!id = id
        newitem!name = name
        newitem!substid = substid
        newitem!quantity = quantity
        newitem!unit = unit
        newitem!supplid = supplier
        newitem!delivery = delivery
        newitem!expiry = expiry
        newitem!location = location
        newitem.Update()
        Global.dbcon.Commit()
      ENDIF 
    
END

PUBLIC SUB deleteChemical(seekid AS String)
  DIM item AS Result
  
  item = Global.dbcon.edit("chemicals", "id = &1", seekid)
  item!deleted = "d"
  item.Update
  
END

PUBLIC FUNCTION getName(seekid AS String) AS String
  
  DIM item AS Result
  
  item = Global.dbcon.Find("chemicals", "id = &1", seekid)
  
  FOR EACH item
    RETURN item!name
  NEXT 

END

PUBLIC FUNCTION getQuantity(seekid AS String) AS Float
  
  DIM item AS Result
  
  item = Global.dbcon.Find("chemicals", "id = &1", seekid)
  
  FOR EACH item
    RETURN item!quantity
  NEXT 

END

PUBLIC FUNCTION getUnit(seekid AS String) AS String
  
  DIM item AS Result
  
  item = Global.dbcon.Find("chemicals", "id = &1", seekid)
  
  FOR EACH item
    RETURN item!unit
  NEXT 

END

PUBLIC FUNCTION getSupplier(seekid AS String) AS Integer
  
  DIM item AS Result
  
  item = Global.dbcon.Find("chemicals", "id = &1", seekid)
  
  FOR EACH item
    RETURN item!supplid
  NEXT 

END

PUBLIC FUNCTION getDelivery(seekid AS String) AS Date
  
  DIM item AS Result
  
  item = Global.dbcon.Find("chemicals", "id = &1", seekid)
  
  FOR EACH item
    RETURN item!delivery
  NEXT 

END

PUBLIC FUNCTION getExpiry(seekid AS String) AS Date
  
  DIM item AS Result
  
  item = Global.dbcon.Find("chemicals", "id = &1", seekid)
  
  FOR EACH item
    RETURN item!expiry
  NEXT 

END

PUBLIC SUB drawMoleculesTV(tview AS TreeView)
  DIM items AS Result
  
  items = Global.dbcon.Find("chemicals")
  
  FOR EACH items
     tview.Add("Chemicals-" & items!id, items!name,, "Chemicals") ', Picture["Molecule.png"] 
  NEXT 
  
  CATCH 
  
END

PUBLIC SUB drawChemicalsCV(cview AS ColumnView) ' , OPTIONAL cutted AS Boolean
  DIM items, molsearch AS Result
  DIM i, cvwidth AS Integer
  DIM molname AS NEW Molecules
  
  items = Global.dbcon.Find("chemicals")
  
 ' IF cutted = TRUE THEN 
    cview.Columns.Count = 8 ' = 2
 ' ELSE 
 '   cview.Columns.Count = 4
 ' ENDIF 
  
  ' cvwidth = cview.Width / cview.Columns.Count
  ' 
 '  FOR i = 0 TO cview.Columns.Count - 1
   ' cview.Columns[i].Width = cvwidth
  ' NEXT 
  
  cview.Columns[0].Text = "Name"
  'cview.Columns[0].Width = 200
  cview.Columns[1].Text = "Substance"
 ' IF cutted = FALSE THEN 
  cview.Columns[2].Text = "Quantity"
  cview.Columns[3].Text = "Unit"
  cview.Columns[4].Text = "Supplier"
  cview.Columns[5].Text = "Delivery"
  cview.Columns[6].Text = "Expiry"
  cview.Columns[7].Text = "Location"
 ' ENDIF 
  
  FOR EACH items
  '  PRINT items!name
    IF items!deleted = "" THEN 
      cview.Add(items!id, items!name) ', Picture["Molecule.png"]
      cview[items!id][1] = molname.getName(items!substid)
 '    IF cutted = FALSE THEN 
      cview[items!id][2] = items!quantity
      cview[items!id][3] = items!unit
      cview[items!id][4] = items!supplid
      cview[items!id][5] = items!delivery
      cview[items!id][6] = items!expiry
      cview[items!id][7] = items!location
 '   ENDIF
    ENDIF  
  NEXT 
  
END
